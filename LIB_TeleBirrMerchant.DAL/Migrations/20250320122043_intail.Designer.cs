// <auto-generated />
using System;
using LIB_TeleBirrMerchant.DAL.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace LIB_TeleBirrMerchant.DAL.Migrations
{
    [DbContext(typeof(TeleBirrMerchantDbContext))]
    [Migration("20250320122043_intail")]
    partial class intail
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("LIB_TeleBirrMerchant.DAL.Entity.MerchantNameCheck", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Identifier")
                        .HasColumnType("text");

                    b.Property<string>("IdentityStatus")
                        .HasColumnType("text");

                    b.Property<string>("Remark")
                        .HasColumnType("text");

                    b.Property<string>("ResultCode")
                        .HasColumnType("text");

                    b.Property<string>("ResultDesc")
                        .HasColumnType("text");

                    b.Property<string>("ResultType")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("MerchantNameCheck");
                });

            modelBuilder.Entity("LIB_TeleBirrMerchant.DAL.Entity.MerchantOutgoingTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<string>("ApprovedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("ApprovedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ConversationID")
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CustomerBranch")
                        .HasColumnType("text");

                    b.Property<string>("Identifier")
                        .HasColumnType("text");

                    b.Property<string>("MerchantName")
                        .HasColumnType("text");

                    b.Property<string>("OriginatorConversationID")
                        .HasColumnType("text");

                    b.Property<string>("ResultCode")
                        .HasColumnType("text");

                    b.Property<string>("ResultType")
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<string>("Timestamp")
                        .HasColumnType("text");

                    b.Property<string>("TransactionID")
                        .HasColumnType("text");

                    b.Property<string>("accountDebited")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("MerchantOutgoingTransaction");
                });
#pragma warning restore 612, 618
        }
    }
}
